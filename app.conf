Rate of Updates: 60

# This path means the relative path between the application directory and the data directory. The
# users of the application can change this relative path to make it suitable for the directory of
# their application file (app.R) and for the directory of their live log file. 
Path = ../../live log/

# Note: The path to the directory of the live file could be defined such as "../../live log/" or
# "../live log/" or "live log/", depending on where the live file is, related to the directory of 
# the application file "app.R". Notice that there must be a forward slash(/) at the end of the 
# path, and there should not be a forward slash at the beginning of the path. This is compulsory
# to reminisce, otherwise, program will not be able to see where the live file is. For instance, 
# the following paths "/live log/", "/../live log/", "/../live log" or "../live log" must NOT be 
# defined. 

# This file contains the user-changeable "rate of updates" value that corresponds
# to the rate of loading live data to the application. The values are in per minutes.
# For example, the default value of "60" means that the application is updated 60 times
# per minute, or in other words, 1 time per second. The possible values for the rate of 
# update are 1, 5, 10, 15, 20, 30, 60, 90, 120, and 180. If any other value is defined,
# then the application will just use the minimum value of 1, so this is not recommendedn. Using 
# the command line, the users of the application can change this value by using the following line:

# > Rscript --vanilla "app.R" {rate of update}

# For instance, changing the rate of update to 30 updates per minute would be done by the 
# following line:

# > Rscript --vanilla "app.R" 30

# If the user does not want to change this "rate of updates" value, then simply invoking the above
# line without defining any value should be adequate.

# > Rscript --vanilla "app.R"

# The "--vanilla" argument here compels the overall command to not store anything
# related with the application, therefore it is necessary to have a stable running program.

# As usual, in order for this code to work, it should be first added the "bin" directory of
# the local R installation to the system environment variables. For instance, a user could create
# a new environment variable named "R_HOME" and define the value as "C:\Program Files\R\R-4.1.0\bin"
# (or wherever the "bin" directory of the current R installation resides in the user's computer). After this
# process is done, a user could change the working directory to the actual directory of the application
# using "cd" commands in a command prompt, then execute the lines given above. In order to exit from the
# shiny application on a command prompt, pressing CTRL+C should do the job. 
